//Бургер
function fixscreen() {
  window.scroll = $(window).scrollTop();
  $("body").css('top', -scroll + 'px').addClass('noscroll');
  $("header").css('top', scroll + 'px');
  $("html").css("overflow-y", "scroll");
}

//Показать ещё поиск


function unfixscreen() {
  $("body").css('top', "0").removeClass('noscroll');
  $("html").removeAttr("style");
  setTimeout(function(){$("header").css('top', "0"); }, 500);
  $(window).scrollTop(scroll);
}

$(".header__menubutton").click(function(){
	$(".burgermenu").addClass("active");
	if ( $(window).width() > 1023 ) {
    window.scroll = $(window).scrollTop();
    $(".burgermenu").css('top', scroll + 'px');
    $("header").css('top', scroll + 'px');
		$(".page, body").addClass("active");
		$(".header__menubutton").addClass("active");
	}
    fixscreen();
});

$(".burgermenu .close-button, .page .overlay").click(function(){
	$(".burgermenu").removeClass("active");
	if ( $(window).width() > 1023 ) {
		$(".page, body").removeClass("active");
		$(".header__menubutton").removeClass("active");
    setTimeout(function(){$("header").css('top', "0"); }, 500);
	}
    unfixscreen();
});

$(".burgermenu .rentmenu").click(function(){
	$(".burgermenu .lists").hide();
	$(".burgermenu .rent").show();
});

$(".burgermenu .listmenu").click(function(e){
	e.preventDefault();
	$(".burgermenu .rent").hide();
	$(".burgermenu .lists").show();
});

$("a.login").click(function(e){
	e.preventDefault();
	if ( !$('.registration').hasClass('active') ) {
		fixscreen();
	}
	$(".registration").removeClass("active");
	$(".authorization").addClass("active");
});

$(".close-button").click(function(e){
	$(this).parent().removeClass("active");
	unfixscreen();
});

$("a.register").click(function(e){
	e.preventDefault();
	if ( !$('.authorization').hasClass('active') ) {
		fixscreen();
	}
	$(".authorization").removeClass("active");
	$(".registration").addClass("active");
});

// Слайдер картинок, блоков и т.д.
$(document).ready(function(){
  $(".owl-carousel").owlCarousel();
});

//Кнопка наверх
$('.toup_button').click(function () {
	$('body, html').animate({scrollTop: 0}, 1200);
});


// Диаграмма в аккаунте
function diagramInit() {
  // Задаем правильную ширину и положение полоскам
  var cellWidth = $(".diagram__header-days li:eq(1)").width();
  $(".diagram__highlight").each(function(){
    var totalWidth, days, startMonth, finalMonth, leftMargin;

    var startDate = $(this).data("from").toString();
    var finalDate = $(this).data("to").toString();
    var startMonth = parseInt(startDate.substr(startDate.length - 2));
    var finalMonth = parseInt(finalDate.substr(finalDate.length - 2));
    var startDay = parseInt(startDate.substring(0, 2));
    var finalDay = parseInt(finalDate.substring(0, 2));

    leftMargin = $(".diagram__header-month[data-month='"+startMonth+"']").position().left + (startDay-1)*cellWidth;
    totalWidth = $(".diagram__header-month[data-month='"+finalMonth+"']").position().left + finalDay*cellWidth - leftMargin;
    $(this).width(totalWidth).css("left", leftMargin);
  });

  function rowHeight() {
    $(".diagram__row").each(function(i){
      $(this).outerHeight( $(this).parents(".accountpage__blockcontent, .shoppingbag__order-forcheck").find(".row-to-diagram:nth-of-type("+(i+1)+")").outerHeight() );
    });
  }
  rowHeight(); monthLeft();

  $('[href="#alltechnics"]').click(function(){
  // Задаем правильную высоту строк
    setTimeout(rowHeight,1);
    setTimeout(monthLeft,1);
  });
  $(window).resize(function(){
    rowHeight(); monthLeft();
  });

  // Фиксируем название месяца
  function monthLeft() {
  $(".diagram__header-month").each(function(){
    $(this).attr("data-left", $(this).position().left);
  });
  }

  $(".diagram").scroll(function(){
    var scroll = $(this).scrollLeft();
    $(".diagram__header-month").each(function(){
      if (scroll>$(this).data("left")) {
        var el = $(this).find("span");
        elWidth = el.outerWidth();
        contWidth = $(this).width();
        maxLeft = $(this).width() - elWidth;
        var left = scroll-$(this).data("left");
        if (left > $(this).data("left")+maxLeft) {left = maxLeft}
        el.css("left", left);
      }
    });
  });


  /* ###### Скролл перетаскиванием ###### */

  var x,y,top,left,down;

  $(".diagram").mousedown(function(e){
      down = true;
      x = e.pageX;
      y = e.pageY;
      top = $(".diagram").scrollTop();
      left = $(".diagram").scrollLeft();
      window.firstscrollleft = $(".diagram").scrollLeft();
  });

  $("html").mousemove(function(e){
      if(down){
          var newX = e.pageX;
          var newY = e.pageY;

          $(".diagram").scrollTop(top - newY + y);
          $(".diagram").scrollLeft(left - newX + x);
          window.newscroll = $(".diagram").scrollLeft();
      }
  });

  $("html").mouseup(function(e){down = false;});

  $(".diagram").on("mouseout", function(e){down = false;});

  //////

  // $("[data-diagram]").click(function(){
  //   var action = $(this).data("diagram");
  //   var newscroll;
  //   if (action === "next") {
  //     var length = 200;
  //   } else {
  //     var length = -200;
  //   }
  //   newscroll = length + $(".diagram").scrollLeft();
  //   if (newscroll < 0) {newscroll = 0}
  //   if (newscroll > $(".diagram__wrapper").outerWidth()-$(".diagram").outerWidth()) {newscroll = $(".diagram__wrapper").outerWidth()-$(".diagram").outerWidth()}
  //
  //   $(".diagram").stop().animate({scrollLeft: newscroll}, 700, "easeOutCubic");
  // });
}

diagramInit();


/**
 * УПРАВЛЕНИЕ ПЕРЕТАСКИВАНИЕМ ПОЛОСОК
 */
var draggableDiagram = {
    // выбранный элемент
    _currentElement: null,
    // направление ['from', 'to']
    _direction: null,
    // родительский блок (для делегирования событий),
    parentNode: null,

    /**
     * Возвращает значение ширины ячейки
     */
    cellWidth() {
        var headerDay = document.querySelector('.diagram__header-days').children[0];

        if (!headerDay || headerDay.offsetWidth <= 0) {
            throw new Error('Невозможно получить ширину ячейки, .diagram__header-days > li');
        }

        return headerDay.offsetWidth;
    },

    /**
     * Задает текущее направления перетаскивания
     */
    set direction(direction) {
        if (['from', 'to', null].indexOf(direction) === -1) {
            throw new Error('Допустимые значения для свойтва direction "from", "to", null');
        }

        this._direction = direction;
    },

    /**
     * Возвращает текущее направление перетаскивания
     */
    get direction() {
        return this._direction;
    },

    /**
     * Устанавливает текущий элемент
     */
    set currentElement(el) {
        var correctClass = 'diagram__highlight',
            incorrectClass = 'diagram__highlight_grey';

        if (el === null) {
            return this._currentElement = null;
        }

        if (el.classList.contains(correctClass) && !el.classList.contains(incorrectClass)) {
            this._currentElement = el;
        }
    },

    /**
     * Возвращает текущий элемент
     */
    get currentElement() {
        return this._currentElement;
    },

    /**
     * Проверка одинаковая ли дата from и to и добавляем/удаляем модификатор
     */
    isSameDate() {
        if (this.currentElement === null) {
            throw new Error('Нельзя сравнивать дату несуществующего элемента');
        }

        var isSame = this.currentElement.dataset.from === this.currentElement.dataset.to,
            modifierClass = 'diagram__highlight_hide_to',
            hasModifier = this.currentElement.classList.contains(modifierClass);

        if (isSame && !hasModifier) {
            this.currentElement.classList.add(modifierClass);
        }

        if (!isSame && hasModifier) {
            this.currentElement.classList.remove(modifierClass);
        }

        return isSame;
    },

    /**
     * Добавить/Вычесть 1 день из даты текущего эелемента и назначить новую
     */
    changeDate(action) {
        if (this.currentElement === null) {
            throw new Error('Нельзя изменить дату, так как элемент не выбран');
        }

        if (this.direction === null) {
            throw new Error('Нельзя изменить дату, так как направление не выбрано');
        }

        if (['+', '-'].indexOf(action) === -1) {
            throw new Error('Допустимые значени для действия "+", "-"');
        }

        var prevDate  = this.currentElement.dataset[this.direction].split('.'),
            prevDay   = Number(prevDate[0]),
            prevMonth = Number(prevDate[1]),
            year      = new Date().getFullYear();


        if (action === '+') {
            prevDay += 1;
        }

        if (action === '-') {
            prevDay -= 1;
        }

        var nextDate     = new Date(year, prevMonth - 1, prevDay),
            nextDay      = nextDate.getDate(),
            nextMonth    = nextDate.getMonth() + 1;


        if (String(nextDay).length === 1) {
            nextDay = '0' + nextDay;
        }

        if (String(nextMonth).length === 1) {
            nextMonth = '0' + nextMonth;
        }

        this.currentElement.dataset[this.direction] = nextDay + '.' + nextMonth;
    },

    /**
     * Проверка на пересечение текущей полоски с серой полоской
     */
    intersection() {
        var currentCoords = this.currentElement.getBoundingClientRect();

        // проверка на существование элемента и является ли он серой полоской, если да, то вернуть его координаты
        var siblingCoords = function(el) {
            if (el && el.classList.contains('diagram__highlight_grey')) {
                return el.getBoundingClientRect();
            }

            return false;
        }

        // пересечение элементов справа
        if (this.direction === 'to') {
            var nextCoords = siblingCoords(this.currentElement.nextElementSibling);
            return nextCoords && currentCoords.left + this.currentElement.offsetWidth >= nextCoords.left;
        }

        // пересечение элементов слева
        if (this.direction === 'from') {
            var prevElement = this.currentElement.previousElementSibling,
                prevCoords = siblingCoords(this.currentElement.previousElementSibling);

            return prevCoords && prevCoords.left + prevElement.offsetWidth >= currentCoords.left;
        }
    },

    /**
     * Начало перетаскивания
     */
    onMouseDown(e) {
        this.currentElement = e.target;

        if (!this.currentElement) {
            return;
        }

        // Добавить класс передвижения
        this.currentElement.classList.add('diagram__highlight_dragged');

        var currentCoords = this.currentElement.getBoundingClientRect();

        // перетакивание начато слева
        if (e.pageX < currentCoords.left + this.cellWidth()) {
            this.direction = 'from';
        }

        // перетаскивание начато справа
        if (e.pageX > currentCoords.left + e.target.offsetWidth - this.cellWidth()) {
            this.direction = 'to';
        }

        this.boundOnMouseMove = this.onMouseMove.bind(this);
        this.boundOnMouseUp = this.onMouseUp.bind(this);

        document.body.addEventListener('mousemove', this.boundOnMouseMove);
        document.body.addEventListener('mouseup', this.boundOnMouseUp);
    },

    /**
     * В процессе перетаскивания
     */
    onMouseMove(e) {
        e.stopPropagation();
        e.preventDefault();

        var currentCoords = this.currentElement.getBoundingClientRect();
        var isSameDate = this.isSameDate();

        // Перетаскивание начато с правой стороны полоски
        if (this.direction === 'to') {
            var toRight = e.pageX > this.cellWidth() / 2 + currentCoords.left + this.currentElement.offsetWidth,
                toLeft = this.cellWidth() / 2 + e.pageX < currentCoords.left + this.currentElement.offsetWidth;

            // движение в правую сторону
            if (toRight) {
                // проверка на пересечение
                if (this.intersection()) {
                    return false;
                }

                this.currentElement.style.width = this.currentElement.offsetWidth + this.cellWidth() + 'px';
                this.changeDate('+');
            }

            // движение в левую сторону
            if (toLeft) {
                if (isSameDate) {
                    return false;
                }

                this.currentElement.style.width = this.currentElement.offsetWidth - this.cellWidth() + 'px'
                this.changeDate('-');
            }
        }

        // Перетаскивание начато с левой стороны полоски
        if (this.direction === 'from') {
            var fromRight = e.pageX > currentCoords.left + this.cellWidth(),
                fromLeft = this.cellWidth() / 2 + e.pageX < currentCoords.left,
                currentLeft = parseInt(this.currentElement.style.left, 10) || 0;

            if (fromRight) {
                if (isSameDate) {
                    return false;
                }

                this.currentElement.style.left = currentLeft + this.cellWidth() + 'px';
                this.currentElement.style.width = this.currentElement.offsetWidth - this.cellWidth() + 'px';
                this.changeDate('+');
            }

            if (fromLeft) {
                if (currentLeft - this.cellWidth() < 0) {
                    return false;
                }

                // проверка на пересечение
                if (this.intersection()) {
                    return false;
                }

                this.currentElement.style.left = currentLeft - this.cellWidth() + 'px';
                this.currentElement.style.width = this.currentElement.offsetWidth + this.cellWidth() + 'px';
                this.changeDate('-');
            }
        }
    },

    /**
     * Конец перетаскивания
     */
    onMouseUp(e) {
        document.body.removeEventListener('mousemove', this.boundOnMouseMove);
        document.body.removeEventListener('mouseup', this.boundOnMouseUp);

        // Удалить класс передвижения
        this.currentElement.classList.remove('diagram__highlight_dragged');

        this.currentElement = null;
        this.direction = null;
    },

    /**
     * Инициализация перетаскивания
     */
    init() {
        this.parentNode = document.querySelector('.diagram__navigation');

        if (!this.parentNode) {
            return false;
        }

        this.parentNode.addEventListener('mousedown', this.onMouseDown.bind(this));
    }
};

// Инициализация перетаскивания полосок
draggableDiagram.init();
}

/**
 * Управление шасштабом диаграммы
 */

var scaleDiagram = {
    _scale: 0,

    /**
     * Установить масштаб диаграммы
     */
    set scale(s) {
        var size = s > 0 ? 0 : s < -2 ? -2 : s;

        if (this.scale === size) {
            return;
        }

        if (size === -2) {
            // размер колонок
            this.wrapper.classList.remove('diagram__wrapper_scale_m1');
            this.wrapper.classList.add('diagram__wrapper_scale_m2');

            // размер дней
            this.days.forEach(function(day) {
                day.parentNode.classList.add('diagram__header-month_scale_m2');
                day.classList.remove('diagram__header-days_scale_m1');
                day.classList.add('diagram__header-days_scale_m2');
            });

            this.hightlights.forEach(function(item) {
                item.classList.remove('diagram__highlight_scale_m1');
                item.classList.add('diagram__highlight_scale_m2');
            });

            diagramInit();
        }

        if (size === -1) {
            // размер колонок
            this.wrapper.classList.remove('diagram__wrapper_scale_m2');
            this.wrapper.classList.add('diagram__wrapper_scale_m1');

            // размер дней
            this.days.forEach(function(day) {
                day.parentNode.classList.remove('diagram__header-month_scale_m2');
                day.classList.remove('diagram__header-days_scale_m2');
                day.classList.add('diagram__header-days_scale_m1');
            });

            this.hightlights.forEach(function(item) {
                item.classList.remove('diagram__highlight_scale_m2');
                item.classList.add('diagram__highlight_scale_m1');
            });

            diagramInit();
        }

        if (size === 0) {
            // размер колонок
            this.wrapper.classList.remove('diagram__wrapper_scale_m2');
            this.wrapper.classList.remove('diagram__wrapper_scale_m1');

            // размер дней
            this.days.forEach(function(day) {
                day.parentNode.classList.remove('diagram__header-month_scale_m2');
                day.classList.remove('diagram__header-days_scale_m1');
                day.classList.remove('diagram__header-days_scale_m2');
            });

            this.hightlights.forEach(function(item) {
                item.classList.remove('diagram__highlight_scale_m1');
                item.classList.remove('diagram__highlight_scale_m2');
            });

            diagramInit();
        }

        this._scale = size;
    },

    /**
     * Получить текущий масштаб диаграммы
     */
    get scale() {
        return this._scale;
    },

    /**
     * Возвращает все красные полоски
     */
    getRedHighlights() {
        var items = Array.from(document.querySelectorAll('.diagram__highlight'));

        return items.filter(function(item) {
            return !item.classList.contains('diagram__highlight_grey');
        });
    },

    /**
     * Клик по кнопкам
     */
    onClick(e) {
        e.preventDefault();

        if (e.target.classList.contains('diagram__header-button_minus')) {
            this.scale = this.scale - 1;
        }

        if (e.target.classList.contains('diagram__header-button_plus')) {
            this.scale = this.scale + 1;
        }
    },

    /**
     * Инициализация масштабирования
     */
    init() {
        var buttons = document.querySelector('.diagram__header-buttons');

        if (!buttons) {
            return false;
        }

        buttons.addEventListener('click', this.onClick.bind(this));

        this.days = Array.from(document.querySelectorAll('.diagram__header-days'));
        this.wrapper = document.querySelector('.diagram__wrapper');
        this.hightlights = this.getRedHighlights();
    }
};

scaleDiagram.init();

//Переключатель блоков в FAQ
$(document).ready(function(){
	$(".faq__details").hide();
});

$(".faq__categorylist a").click(function(e){
	e.preventDefault();
	var href = $(this).attr("href");

	$(".faq__categorylist a.active").removeClass("active");
	$(this).addClass("active");
		$(this).siblings(".faq__hiddenlist").slideToggle();
	$(this).parent().siblings().find(".faq__hiddenlist").slideUp();
	if ( $(window).width() < 1024 ) {
		$(".faq__popular").hide();
		$(".faq__categorylist").hide();
		$(""+href+"").show();
	} else {
		$(".faq__popular").hide();
		$(".faq__details").hide();
		$(""+href+"").show();
	}
});

$(".faq__popularlist a").click(function(e){
	e.preventDefault();
	var href = $(this).attr("href");
	if ( $(window).width() < 1024 ) {
		$(".faq__popular").hide();
		$(".faq__categorylist").hide();
		$(""+href+"").show();
	} else {
		$(".faq__popular").hide();
		$(".faq__details").hide();
		$(""+href+"").show();
	}
});

$(".faq__detailstoptext a").click(function(e){
	e.preventDefault();
	$(".faq__details").hide();
	$(".faq__popular").show();
	$(".faq__categorylist").show();
	$(".faq__categorylist a.active").removeClass("active");
});



//Переключатель блоков на странице выдачи поиска
$('.searchresult__buttons a[href="#map"]').click(function(e){
	e.preventDefault();
	$(".searchresult__cards").hide();
	$(".searchresult__map").show();
	$('.searchresult__buttons a[href="#map"]').hide();
	$('.searchresult__buttons a[href="#list"]').show();
});

$('.searchresult__buttons a[href="#list"]').click(function(e){
	e.preventDefault();
	$(".searchresult__map").hide();
	$(".searchresult__cards").show();
	$('.searchresult__buttons a[href="#list"]').hide();
	$('.searchresult__buttons a[href="#map"]').show();
});


// Самописный слайдер
customslider();

function customslider() {
	$(".slider").each(function(){
		var slideamount = $(this).find(".slide").length;
		$(this).find(".wrapper").css("width", slideamount*100+"%");
		$(this).find(".slide").css("width", 100/slideamount+"%");
	});
}

// Переключение слайдов (стрелочки)
$(".slider .arrow").click(function() {
	var slideamount = $(this).parents(".slider").find(".slide").length;
	var currentslide = parseInt($(this).parents(".slider").find(".slide.active") .attr("data-slide"));
	if ($(this).hasClass("left")) {
		currentslide -= 1;
		if (currentslide < 1) {currentslide = 1;}
	}
	if ($(this).hasClass("right")) {
		currentslide += 1;
		if (currentslide > slideamount) {currentslide = slideamount;}
	}
	$(this).parents(".slider").find(".wrapper").css("left", "-"+(100*(currentslide-1))+"%");	$(this).parents(".slider").find(".slide.active").removeClass("active");
	$(this).parents(".slider").find('.slide[data-slide='+currentslide+']').addClass("active");	$(this).parents(".slider").find(".dot.active").removeClass("active");
	$(this).parents(".slider").find('.dot[data-slide='+currentslide+']').addClass("active");	$(this).parents(".slider").find(".productcard__slideinfo.active").removeClass("active");	$(this).parents(".slider").find('.productcard__slideinfo[data-slide='+currentslide+']').addClass("active");
});

//Переключение слайдов (точки)
$(".slider .dot").click(function(){
	$(this).parents(".slider").find(".dot.active").removeClass("active");
   	var newslide = $(this).attr("data-slide");
   	$(this).parents(".slider").find(".wrapper").css("left", "-"+(100*(newslide-1))+"%");	$(this).parents(".slider").find(".slide.active").removeClass("active");
	$(this).parents(".slider").find('.slide[data-slide='+newslide+']').addClass("active");
	$(this).parents(".slider").find('.dot[data-slide='+newslide+']').addClass("active");	$(this).parents(".slider").find(".productcard__slideinfo.active").removeClass("active");	$(this).parents(".slider").find('.productcard__slideinfo[data-slide='+newslide+']').addClass("active");
});




//Перезагрузка страницы при переходе на мобильную версию и обратно
window.desktop;
window.newdesktop;

function checkpagewidth() {
    if ( $(window).width() > 768 ) {
        desktop = true;
    } else { desktop = false; }

    $(window).resize(function(){
        if ( $(window).width() > 768 ) {
            newdesktop = true;
        } else { newdesktop = false; }

        if ( newdesktop != desktop ) {
            location.reload();
        }
    });
}




// Плавное появление блоков при скролле
window.sr = ScrollReveal();
var fooReveal = {delay: 100, distance: '40px', easing: 'cubic-bezier(0.3, 0.5, 0.1, 1)', scale: 1, mobile: false, duration: 1000};
sr.reveal('sr', fooReveal);




// Параллакс бекграунда (во втором блоке)
function scrollsecond() {
    var el = $("section.second");
    var h1 = el.offset().top;
    var sectionheight = el.height();
    var scroll = $(window).scrollTop();
    if ( (scroll > (h1 - $(window).height())) ) {
        var percents = scroll/sectionheight;
        $("section.second .bg").css("top", (200-percents*150)+"px");
    }
}




// Фиксировать экран для самописных модальных окон
function fixscreen() {
  window.scroll = $(window).scrollTop();
  $("body").css('top', -scroll + 'px').toggleClass('noscroll');
}

function unfixscreen() {
  $("body").css('top', "0").toggleClass('noscroll');
  $(window).scrollTop(scroll);
}




// Кастомный селектбокс (selectBoxIt)
$("#select").selectBoxIt();

// Кастомный селектбокс (jQuery UI)
$(".selectmenu").selectmenu();


// Показ прелоадера при отправке формы
$(document).on({
  ajaxStart: function() { $(".preloader").addClass("active");},
  ajaxStop: function() { $(".preloader").removeClass("active");}
});




// Плавно скрыть/показать блок
function hideblock(el) {
  setTimeout(function() {$(el).show();}, 700);
  setTimeout(function() {$(el).css("opacity", "1");}, 900);
}

function showblock(el) {
  setTimeout(function() {$(el).css("opacity", "0");}, 700);
  setTimeout(function() {$(el).show();}, 900);
}



// LazyLoad + Masonry (+imagesLoaded)
$(".lazy").lazyload({
    effect: 'fadeIn',
    effectspeed: 1000,
    threshold: 200
});




// Ссылки навигации по странице (добавить класс nav к ссылке с #)
$("a.nav").click(function(event){
    event.preventDefault();
    $('html,body').animate({scrollTop:$(this.hash).offset().top}, 1200);
});




// Добавить в избранное
function addtobookmarks() {
    var url = $("#tofavourites p").text();

    if (window.sidebar && window.sidebar.addPanel) { // Mozilla Firefox Bookmark
      window.sidebar.addPanel(document.title, url, '');
    } else if (window.external && ('AddFavorite' in window.external)) { // IE Favorite
      window.external.AddFavorite(url, document.title);
    } else if (window.opera && window.print) { // Opera Hotlist
      this.title = document.title;
      return true;
    } else { // webkit - safari/chrome
      alert('Нажмите ' + (navigator.userAgent.toLowerCase().indexOf('mac') != -1 ? 'Command/Cmd' : 'CTRL') + ' + D, чтобы добавить страницу в закладки.');
    }
}





// Всплывающие окна
$(".fancybox").fancybox({
    fitToView   : false,
    autoSize    : true,
    openEffect  : 'fade',
    closeEffect : 'fade',
});





// Всплывающая галерея картинок
$(".fancyimage").fancybox({
    fitToView   : true,
    autoSize    : true,
    openEffect  : 'fade',
    closeEffect : 'fade',
});




// Проверка формы на правильность введенных данных
$(".required-form button").click(function(e){
	e.preventDefault();
    window.activeform = $(this).parents("form").attr("id");

    checkinputs();
    checkandsubmit();
});


// 2. Проверка текстовых input'ов
function checkinputs() {
    // Проверка обычных полей на заполненность
    checkempty();

    // Проверка поля email
    function isEmail(email) {
        var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return regex.test(email);
    }
    if ( isEmail($('#'+activeform+' input[name="email"]').val()) === false) {
        $('#'+activeform+' input[name="email"]').parent().addClass("error")
    } else {$('#'+activeform+' input[name="email"]').parent().removeClass("error")}
}

// 3. Проверка на ошибочные поля и отправка формы
function checkandsubmit() {
    window.formerrors = 0;
    $('#'+activeform).find(".error").each(function(){
        formerrors += 1;
    });
    if (formerrors === 0) {
        $('#'+activeform).submit();
    }
}

// Скрипт проверки на пустое значение
function checkempty() {
    $('#'+activeform+' [data-required]').each(function(){
        if (!$(this).val()) {
            $(this).parent().addClass("error")
        } else {$(this).parent().removeClass("error")}
    });
}

// Проверка номера телефона
function phonenumerlength() {
   if ( $('#'+activeform+' input[name="tel"]').val().match(/\d/g).length < 11) {
       $('#'+activeform+' input[name="tel"]').addClass("error")
   } else {$('#'+activeform+' input[name="tel"]').removeClass("error")}
}

// Убрать ошибку при изменении input'а
$("input, textarea").on("keyup change", function(){
   $(this).parent().removeClass("error");
});

// Только цифры в input'е
$('.onlynumber').change(function(e){
  if (/\D/g.test(this.value))
  {
    this.value = this.value.replace(/\D/g, '');
  }
});


//Обязательные поля
$(document).ready(function(){
	$('[data-required]').parent().addClass('required-field');
});


/* ########################### */
/* Выпадающие списки */
/* ########################### */
$(".selectbox").each(function(){
    $(this).find("option").each(function(){
        var ttext = $(this).text();
        var vval = $(this).val();
        var li = "<li data-val="+vval+">"+ttext+"</li>";
        $(this).parents(".selectbox").find("ul").append(li);
    });

    $(this).find("ul li").click(function(){
        var newval = $(this).data("val");
        $(this).parent().parent().find("select").val(newval);
		var inputval = $(this).parent().parent().find("select option[value="+newval+"]").text();
		$(this).parent().parent().find("input").val(inputval);
    });

    $(this).find("select").on("mousedown click", function(e){
        e.preventDefault();
        e.stopPropagation();
        this.blur();
        window.focus();
        $(this).parents(".selectbox").addClass("active");
    });

    $(this).find("ul").click(function(){
        $(this).removeClass("active");
        leftinfo();
    });

    $("html").click(function(){
        $(".selectbox").removeClass("active");
    });
});

// Выпадающий список на первом экране главной
$('.selectbox_inputbox input').keydown(function(){
	$(this).parents(".selectbox").addClass("active");
});



// Переход названия поля в активное состояние
$("input, textarea").focus(function(){
   window.nowform = $(this).closest("form").attr("id");
   $(this).prev().addClass('active');
});

$("input, textarea, select").on("blur change", function(){
    window.nowform = $(this).closest("form").attr("id");
   if ($(this).val() === "") {
       $(this).prev().removeClass('active');
   }
});




//  Добавляем/убираем тень при длинном value в input
$("input[name='seller']").on("keyup change", function(){
    if ($(this).val().length > 35) {
        $(this).parents("form").addClass("filled");
    } else {$(this).parents("form").removeClass("filled");}
});




// Маска для поля ввода телефона
$(document).ready(function(){
   $("input[name='tel']").inputmask("+7 (999) 999-99-99");
});




//Перевод языка
function translatepage() {
	window.aLangKeys=new Array();
	aLangKeys['us']=new Array();
	aLangKeys['de']=new Array();
	aLangKeys['es']=new Array();
	aLangKeys['it']=new Array();
	aLangKeys['fr']=new Array();
	aLangKeys['jp']=new Array();

	aLangKeys['us']['languagename']='English';
	aLangKeys['de']['languagename']='Deutsch';
	aLangKeys['es']['languagename']='Español';
	aLangKeys['it']['languagename']='Italiano';
	aLangKeys['fr']['languagename']='Français';
	aLangKeys['jp']['languagename']='フランス語';
}

// Скрипт перевода языка
$(document).ready(function() {
    $('[data-lang]').click( function() {
		translatepage();
        window.lang = $(this).attr('data-lang'); // obtain language id
        // translate all translatable elements
        $('[data-key]').each(function(i){
          $(this).text(aLangKeys[lang][ $(this).attr('data-key') ]);
        });
    });
    //
    $('.shoppingbag__pay_open').click(function(e){
      e.preventDefault()
      $(this).closest('.shoppingbag__topay').slideUp()
      setTimeout('$(".shoppingbag__pay").slideDown();', 400)
    })
    // __проверка наличия и открытие оплаты в корзине

    // открытие выбора оплаты в корзине
    $('.shoppingbag__order-payment_open').click(function(e){
      e.preventDefault()
      $(".shoppingbag__order-payment").slideDown();
    })
    // __открытие выбора оплаты в корзине
});







 /* НОВОЕ ###################### */

//Личный кабинет

//Закрывающие документы
$('.account__order-documents a[href="#moredocs"]').click(function(e){
	e.preventDefault();
	$(this).parent().addClass("active");
	$(".account__order-documentslist").slideDown();
})

//Просмотреть заказ
$('.account__orders-list a[href="#orderinfo"]').click(function(e){
	e.preventDefault();
	$(".account__orders").hide();
	$(".account__orderinfo").show();
})

//Назад ко всем заказам
$('.account__orderinfo a[href="#orders"]').click(function(e){
	e.preventDefault();
	$(".account__orderinfo").hide();
	$(".account__orders").show();
})

//Добавить ответ в обращении
$('a.account__add-answer').click(function(e){
	e.preventDefault();
	$(this).next().show();
	$(this).find('.icon').text("-");
})

//Просмотреть обращение
$('.account__message-list a[href="#message-info"]').click(function(e){
	e.preventDefault();
	$(".account__messages").hide();
	$(".account__message-info").show();
})

//Назад ко всем обращениям
$('.account__message-info a[href="#messages"]').click(function(e){
	e.preventDefault();
	$(".account__message-info").hide();
	$(".account__messages").show();
})

//Просмотреть технику
$('.account__technics-list a[href="#technics-info"]').click(function(e){
	e.preventDefault();
	$(".account__technics").hide();
	$(".account__technics-info").show();
})

//Назад ко всей технике
$('.account__technics-info a[href="#technics"]').click(function(e){
	e.preventDefault();
	$(".account__technics-info").hide();
	$(".account__technics").show();
})

//Просмотреть оператора
$('.account__operators-cards a[href="#operators-info"], .account__operators-prehead a[href="#operators-info"]').click(function(e){
	e.preventDefault();
	$(".account__operators").hide();
	$(".account__operators-info").show();
})

//Назад ко всем операторам
$('.account__operators-info a[href="#operators"]').click(function(e){
	e.preventDefault();
	$(".account__operators-info").hide();
	$(".account__operators").show();
})

//Календарь
$.datepicker.setDefaults( $.datepicker.regional[ "ru" ] );

$(".calendar").click(function(e){
	e.preventDefault();
	$(".datepicker").datepicker({
		monthNames: ['Январь', 'Февраль', 'Март', 'Апрель',
		'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь',
		'Октябрь', 'Ноябрь', 'Декабрь'],
 		dayNamesMin: ['Вс','Пн','Вт','Ср','Чт','Пт','Сб'],
 		firstDay: 1,
	});
});

// Аккордион
$("[data-accordion]").click(function(){
    var target = $(this).data("accordion");
    $(this).toggleClass("active");
    $("#"+target).slideToggle();
});

// Показать поиск в хедере
function toggleheadersearch() {
    $("header .searchform").toggleClass("active");
}

function hideheadersearch() {
    $("header .searchform").removeClass("active");
}

$(".header").click(function(event){
  event.stopPropagation();
});

$("html").click(function(){
  if (!$(".header__searchform").hasClass("activesearch")) {
  hideheadersearch();
  }
});

$("[data-action='toggleheadersearch']").click(function(e){
    e.preventDefault();
    toggleheadersearch();
});

// Бургер чтоб не перепрыгивал слева направо при ресайзе окна
function burgerjump(){
    var el = $(".burgermenu");
    var win = $(window);
    var width = win.width();
    var newidth;
    win.resize(function(){
        newidth = win.width();
        if (newidth != width) {
            width = newidth;
            el.css("visibility", "hidden");
            setTimeout(function(){
                el.removeAttr("style");
            },500);
        }
    });
};

burgerjump();




$(".paymentpopup .formpart .radiodiv label").click(function(){
  window.paymentVar = $(this).prev().val();
});




// AJAX форма
$(document).ready(function() {
    $('#subscribeform').ajaxForm(function() {
        // Успешная отправка формы
        $.fancybox([{href : '#success', fitToView   : false, autoSize    : true, openEffect  : 'fade', closeEffect : 'fade',}]);
    });

    // Оплата
    $("#full-payment").ajaxForm(function() {
      if (paymentVar === "count") {
        // Получить счет
        $.fancybox([{href : '#get-bill', fitToView   : false, autoSize    : true, openEffect  : 'fade', closeEffect : 'fade',}]);
      } else {
        // Онлайн оплата

      }
    });
});



// Меняем контент в аккаунте
$("[data-change-account]").click(function(){
  $(".page-of-account").hide();
  var acc = $(this).data("change-account");
  $(".account__"+acc).show();
  $(window).trigger('resize');
});

$(".account__navigation_desktop li:not(.account__logout)").click(function(){
  $(this).siblings().removeClass("active");
  $(this).addClass("active");
});


// map in productcard
function productcardMap() {
    var el = $(".productcard__rightblock");
    if ($(".productcard__characteristics").length > 0) {
    var eltop = $(".productcard__characteristics").offset().top;
    var el2 = $(".productcard__similarmodels");
    var newheight = $(window).height()-$("header").height()-40;
    
    if ($(window).width()>=1024) {
        el.height(newheight);
    } else {
        el.attr("style", "");
        el.removeClass("fixed").removeClass("fixedbottom");
    }
    
    $(window).resize(function(){    
        newheight = $(window).height()-$("header").height()-40;
        eltop = $(".productcard__characteristics").offset().top;
        if ($(window).width()>=1024) {
            el.height(newheight);
        } else {
            el.attr("style", "");
            el.removeClass("fixed").removeClass("fixedbottom");
        }
    });
    
        $(window).on("scroll resize", function(){
            if ($(window).width()>=1024) {
                
                var scroll = $(this).scrollTop(); 
                if (scroll > eltop-$("header").height()) {
                    el.addClass("fixed");
                } else {
                    el.removeClass("fixed");
                }
                
                if (scroll > (el2.offset().top - newheight - el2.outerHeight(true) + el2.outerHeight() -  $(".productcard__similarmodels").outerHeight(true)+$(".productcard__similarmodels").outerHeight() )) {
                    el.addClass("fixedbottom").css("top", $(".productcard__description").offset().top - $(".productcard__content .container").offset().top + $(".productcard__description").outerHeight(true) - newheight);
                } else {
                    el.removeClass("fixedbottom").css("top", "");
                }
                
            } else {
                el.attr("style", "");
                el.removeClass("fixed").removeClass("fixedbottom");
            }
        });
        }
}
    
productcardMap();

// Добавление файла
$(".bottom-contact-form input[type='file']").change(function(){
    var val = $(this).val();
    if (val != "") {
        $(this).parent().find("label span").text(val);
    $(this).parent().find("a").addClass("active");   
    }
});

$(".bottom-contact-form .bottom-contact-form__field a").click(function(e){
    e.preventDefault();
    $(this).removeClass("active");
    $(this).parent().find("input").val("");
    $(".bottom-contact-form__field_file label span").text("Выберите файл");
});